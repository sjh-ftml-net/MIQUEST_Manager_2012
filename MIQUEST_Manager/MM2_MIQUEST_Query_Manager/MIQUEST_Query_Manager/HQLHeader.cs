using System;
using System.Collections;
using System.Linq;
using System.Text;

namespace MIQUEST_Query_Manager
{
    class HQLHeader
    {
        public int Order = 1;
        public bool FatalError = false;
        public string ErrorMessage = "";

        public string SetID = "MQQM";
        public string SetDescription = "MIQUEST Query Manager";

        public bool ScheduledQuery = false;
        public DateTime ScheduledStart;
        public DateTime ScheduledEnd;
        public int ScheduledPeriod;
        public string ScheduledWeekMonth;

        public string CodeSet = "";

        public bool RemoteItems = false;
        public string PracticeCode = "";
        public string Media = "";

        private ArrayList aQueryNames = new ArrayList();

        public void SetCodeSet(string SystemID)
        {
            // The coding scheme used (e.g. *QRY_CODES,0,9999R3,Read Version 3)

            if (SystemID == "TPP SystmOne")
            {
                CodeSet = "*QRY_CODES,0,9999R3,Read Version 3";
            }
            else if (SystemID == "EMIS LV")
            {
                CodeSet = "*QRY_CODES,0,9999R2,Read Version 2";
            }
            else if (SystemID == "EMIS PCS")
            {
                CodeSet = "*QRY_CODES,0,9999R2,Read Version 2";
            }
            else if (SystemID == "EMIS Web")
            {
                CodeSet = "*QRY_CODES,0,9999R2,Read Version 2";
            }
            else if (SystemID == "Healthy Crosscare")
            {
                CodeSet = "*QRY_CODES,0,9999R2,Read Version 2";
            }
            else if (SystemID == "InPractice Vision 3")
            {
                CodeSet = "*QRY_CODES,0,9999R2,Read Version 2";
            }
            else if (SystemID == "iSOFT Premiere")
            {
                CodeSet = "*QRY_CODES,0,9999R2,Read Version 2";
            }
            else if (SystemID == "iSOFT Synergy")
            {
                CodeSet = "*QRY_CODES,0,9999R2,Read Version 2";
            }
            else if (SystemID == "Microtest Evolution")
            {
                CodeSet = "*QRY_CODES,0,9999R2,Read Version 2";
            }
            else if (SystemID == "Microtest PMII")
            {
                CodeSet = "*QRY_CODES,0,9999R2,Read Version 2";
            }
            else
            {
                ErrorMessage = "Unknown system type (" + SystemID + ")";
                FatalError = true;
            }
        }

        public string Generate(string Title, string Description, string Comment)
        {
            string sHQLHeader = "";

            if (Title.Length > 8)
            {
                ErrorMessage = "HQL title too long (" + Title + ")";
                FatalError = true;
            }
            else if (CodeSet == "")
            {
                ErrorMessage = "HQL Header Codeset empty";
                FatalError = true;
            }
            else if (aQueryNames.Contains(Title))
            {
                ErrorMessage = "Duplicate Query Name " + Title;
                FatalError = true;
            }
            else
            {
                aQueryNames.Add(Title);

                sHQLHeader = "# Autogenerated at " + DateTime.Now + " by M:QUEST Query Manager" + "\r\n";
                sHQLHeader = sHQLHeader + "# " + Comment + "\r\n";
                // The date the query was written (e.g. *QRY_WDATE,20110523,23/05/2011)
                sHQLHeader = sHQLHeader + "*QRY_WDATE," + String.Format("{0:yyyyMMdd}", DateTime.Today) + "," + String.Format("{0:dd/MM/yyyy}", DateTime.Today) + "\r\n";
                // The query title (e.g. *QRY_TITLE,DIA001G,Subset)
                sHQLHeader = sHQLHeader + "*QRY_TITLE," + Title + "," + Description + "\r\n";
                // The order in which to run the query (e.g. *QRY_ORDER,005,)
                sHQLHeader = sHQLHeader + "*QRY_ORDER," + Order.ToString("D3") + "," + "\r\n";
                // The Data Collection Agreement (e.g. *QRY_AGREE,LOCAL,)
                sHQLHeader = sHQLHeader + "*QRY_AGREE,LOCAL," + "\r\n";
                // The identity of the enquirer (e.g. *ENQ_IDENT,LOCAL,)
                sHQLHeader = sHQLHeader + "*ENQ_IDENT,LOCAL," + "\r\n";
                // The set of queries to which this belongs (e.g. *QRY_SETID,CTV3, CTV3 set)
                sHQLHeader = sHQLHeader + "*QRY_SETID," + SetID + "," + SetDescription + "\r\n";
                // Code Set
                sHQLHeader = sHQLHeader + CodeSet + "\r\n";

                // REMOTE ENQUIRY

                if (RemoteItems)
                {
                    if (PracticeCode == "")
                    {
                        ErrorMessage = "HQL Header Practice Code empty" + "\r\n";
                        FatalError = true;
                    }
                    else
                    {
                        sHQLHeader = sHQLHeader + "# Remote Query" + "\r\n";
                        // The identity of the target (e.g. *ENQ_RSPID,B12345,Longtown Surgery
                        sHQLHeader = sHQLHeader + "*ENQ_RSPID," + PracticeCode + "," + "\r\n";
                        // Media for responses, D or N (e.g. *QRY_MEDIA,D,DISK) - Only mandated for REMOTE
                        sHQLHeader = sHQLHeader + "*QRY_MEDIA," + Media.Substring(0, 1) + "," + Media + "\r\n";
                        // The date the query was submitted (e.g. *QRY_SDATE,20110201,01/02/2011) - Only mandated for REMOTE
                        sHQLHeader = sHQLHeader + "*QRY_SDATE," + String.Format("{0:yyyyMMdd}", DateTime.Today) + "," + String.Format("{0:dd/MM/yyyy}", DateTime.Today) + "\r\n";
                    }
                }

                if (ScheduledQuery && Order == 1)
                {
                    sHQLHeader = sHQLHeader + "# Scheduled Query" + "\r\n";
                    sHQLHeader = sHQLHeader + "*SCH_SDATE," + String.Format("{0:yyyyMMdd}", ScheduledStart) + "," + ScheduledStart.ToShortDateString() + "\r\n";
                    sHQLHeader = sHQLHeader + "*SCH_EDATE," + String.Format("{0:yyyyMMdd}", ScheduledEnd) + "," + ScheduledEnd.ToShortDateString() + "\r\n";
                    sHQLHeader = sHQLHeader + "*SCH_RERUN," + ScheduledPeriod.ToString("D3") + ScheduledWeekMonth.Substring(0, 1) + "\r\n";
                }

                sHQLHeader = sHQLHeader + "# End of Header";

                Order++;
            }

            return sHQLHeader;

        }

        public string ListQueries()
        {
            string str = "";

            foreach (string s in aQueryNames)
            {
                if (str == "")
                    str = s;
                else
                    str = str + ", " + s;
            }

            return str;
        }

        public void Clear()
        {
            aQueryNames.Clear();
        }
    }
}
